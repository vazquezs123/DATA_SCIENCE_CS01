working_dir <- trimws(working_dir)
setwd(working_dir)
###################
# Data Imputation
###################
# import Beers.csv data and append column names
beer_file <- paste(data_dir,"\\Beers.csv", sep = "")
beer_df <- read.csv(beer_file, sep=",", header = FALSE, na.strings = c("","NA"))
names(beer_df) <- c("Beer_Name", "Beer_ID", "ABV", "IBU", "Brewery_ID","Style", "Ounces")
# import Brewery.csv and get number of breweries in each state
brew_file <- paste(data_dir, "\\Breweries.csv", sep = "")
brew_df <- read.csv(brew_file, sep=",", header = FALSE, na.string = c("","NA"))
names(brew_df) <- c("Brewery_ID", "Brewery_Name", "Brewery_City","Brewery_State")
brew_state_count <- data.table(table(brew_df$Brewery_State))
brewery_state_count <- brewery_state_count[1:51]
# merge datasets and print first and last 6 observations
beer_brew_df <- merge(x = beer_df, y = brew_df, by = "Brewery_ID",all = FALSE)
beer_brew_df <- data.table(beer_brew_df)
head(beer_brew_df, 6)
tail(beer_brew_df,6)
# report the number of NA's in each column
na_count <- colSums(is.na(beer_brew_df))
print("Initial NA count per data column is: ")
print(na_count)
# get and show only complete rows
beer_brew_df <- beer_brew_df[complete.cases(beer_brew_df),]
na_count <- colSums(is.na(beer_brew_df))
print("NA count after incomplete row removal: ")
print(na_count)
# get median alcohol content (ABV) and international bitterness units (IBU)
median_abv <- summaryBy(ABV ~ Brewery_State, data = beer_brew_df, FUN=list(median))
median_ibu <- summaryBy(IBU ~ Brewery_State, data = beer_brew_df, FUN=list(median))
median_abv_ibu <- merge(median_abv,median_ibu, by = "Brewery_State")
melted_median_abv <- melt(median_abv)
melted_median_ibu <- melt(median_ibu)
melted_median_abv_ibu <- merge(melted_median_abv, melted_median_ibu, by = "Brewery_State")
melted_median_abv_ibu
library(dplyr)
library(knitr)
library(data.table)
library(doBy)
library(ggplot2)
library(reshape2)
# set working directory
data_dir = "C:\\Users\\vazqu\\Documents\\SMU\\data_science\\case_study_repo\\DATA_SCIENCE_CS01\\data"
working_dir = "C:\\Users\\vazqu\\Documents\\SMU\\data_science\\case_study_repo\\DATA_SCIENCE_CS01"
# strip whitespaces and set directory
data_dir <- trimws(data_dir)
working_dir <- trimws(working_dir)
setwd(working_dir)
###################
# Data Imputation
###################
# import Beers.csv data and append column names
beer_file <- paste(data_dir,"\\Beers.csv", sep = "")
beer_df <- read.csv(beer_file, sep=",", header = FALSE, na.strings = c("","NA"))
names(beer_df) <- c("Beer_Name", "Beer_ID", "ABV", "IBU", "Brewery_ID","Style", "Ounces")
# import Brewery.csv and get number of breweries in each state
brew_file <- paste(data_dir, "\\Breweries.csv", sep = "")
brew_df <- read.csv(brew_file, sep=",", header = FALSE, na.string = c("","NA"))
names(brew_df) <- c("Brewery_ID", "Brewery_Name", "Brewery_City","Brewery_State")
brew_state_count <- data.table(table(brew_df$Brewery_State))
brewery_state_count <- brewery_state_count[1:51]
# merge datasets and print first and last 6 observations
beer_brew_df <- merge(x = beer_df, y = brew_df, by = "variable",all = FALSE)
beer_brew_df <- data.table(beer_brew_df)
head(beer_brew_df, 6)
tail(beer_brew_df,6)
# report the number of NA's in each column
na_count <- colSums(is.na(beer_brew_df))
print("Initial NA count per data column is: ")
print(na_count)
# get and show only complete rows
beer_brew_df <- beer_brew_df[complete.cases(beer_brew_df),]
na_count <- colSums(is.na(beer_brew_df))
print("NA count after incomplete row removal: ")
print(na_count)
# get median alcohol content (ABV) and international bitterness units (IBU)
median_abv <- summaryBy(ABV ~ Brewery_State, data = beer_brew_df, FUN=list(median))
median_ibu <- summaryBy(IBU ~ Brewery_State, data = beer_brew_df, FUN=list(median))
median_abv_ibu <- merge(median_abv,median_ibu, by = "Brewery_State")
melted_median_abv <- melt(median_abv)
melted_median_ibu <- melt(median_ibu)
melted_median_abv_ibu <- merge(melted_median_abv, melted_median_ibu, by = "Brewery_State")
melted_median_abv_ibu
library(dplyr)
library(knitr)
library(data.table)
library(doBy)
library(ggplot2)
library(reshape2)
# set working directory
data_dir = "C:\\Users\\vazqu\\Documents\\SMU\\data_science\\case_study_repo\\DATA_SCIENCE_CS01\\data"
working_dir = "C:\\Users\\vazqu\\Documents\\SMU\\data_science\\case_study_repo\\DATA_SCIENCE_CS01"
# strip whitespaces and set directory
data_dir <- trimws(data_dir)
working_dir <- trimws(working_dir)
setwd(working_dir)
###################
# Data Imputation
###################
# import Beers.csv data and append column names
beer_file <- paste(data_dir,"\\Beers.csv", sep = "")
beer_df <- read.csv(beer_file, sep=",", header = FALSE, na.strings = c("","NA"))
names(beer_df) <- c("Beer_Name", "Beer_ID", "ABV", "IBU", "Brewery_ID","Style", "Ounces")
# import Brewery.csv and get number of breweries in each state
brew_file <- paste(data_dir, "\\Breweries.csv", sep = "")
brew_df <- read.csv(brew_file, sep=",", header = FALSE, na.string = c("","NA"))
names(brew_df) <- c("Brewery_ID", "Brewery_Name", "Brewery_City","Brewery_State")
brew_state_count <- data.table(table(brew_df$Brewery_State))
brewery_state_count <- brewery_state_count[1:51]
# merge datasets and print first and last 6 observations
beer_brew_df <- merge(x = beer_df, y = brew_df, by = "variable",all = FALSE)
beer_brew_df <- data.table(beer_brew_df)
head(beer_brew_df, 6)
tail(beer_brew_df,6)
# report the number of NA's in each column
na_count <- colSums(is.na(beer_brew_df))
print("Initial NA count per data column is: ")
print(na_count)
# get and show only complete rows
beer_brew_df <- beer_brew_df[complete.cases(beer_brew_df),]
na_count <- colSums(is.na(beer_brew_df))
print("NA count after incomplete row removal: ")
print(na_count)
# get median alcohol content (ABV) and international bitterness units (IBU)
median_abv <- summaryBy(ABV ~ Brewery_State, data = beer_brew_df, FUN=list(median))
median_ibu <- summaryBy(IBU ~ Brewery_State, data = beer_brew_df, FUN=list(median))
melted_median_abv <- melt(median_abv)
melted_median_ibu <- melt(median_ibu)
melted_median_abv_ibu <- merge(melted_median_abv, melted_median_ibu, by = "variable")
melted_median_abv_ibu
melted_median_ibu
melted_median_abv_ibu <- merge(melted_median_abv, melted_median_ibu, by = "variable")
melted_median_abv_ibu
melted_median_abv <- melt(median_abv, median)
melted_median_abv_ibu <- rbind(melted_median_abv, melted_median_ibu)
melted_median_abv_ibu
ggplot(melted_median_abv_ibu, aes(x=variable, y=value, fill=factor(Brewery_State))) +
geom_bar(stat="identity", position="dodge") +
scale_fill_discrete(name="Brewery_State",
breaks=c(1,2),
labels=c("ABV", "IBU"))+
xlab("State") + ylab("Median ABV/IBU")
head(melted_median_abv_ibu)
ggplot(data=median_abv_ibu, aes(x = Brewery_State, y=IBU.median, fill=plot_fill)) +
geom_bar(stat="identity", position="fill") +
# find state with max ABV beer
# find state with max IBU beer
# display summary of ABV
summary(beer_brew_df$ABV)
# display summary of ABV
summary(beer_brew_df$ABV)
summary(beer_brew_df)
summary(beer_brew_df, ABV)
summary(beer_brew_df[3]
)
ggplot(melted_median_abv_ibu, aes(x=variable, y=value, fill=factor(Brewery_State))) +
geom_bar(stat="identity", position="dodge") +
scale_fill_discrete(name="Brewery_State",
breaks=c(1,2),
labels=c("ABV", "IBU"))+
xlab("State") + ylab("Median ABV/IBU")
ggplot(melted_median_abv_ibu, aes(x=variable, y=value, fill=factor(Brewery_State))) +
geom_bar(stat="identity", position="dodge") +)+
xlab("State") + ylab("Median ABV/IBU")
ggplot(melted_median_abv_ibu, aes(x=variable, y=value, fill=factor(Brewery_State))) +
geom_bar(stat="identity", position="dodge") +
xlab("State") + ylab("Median ABV/IBU")
ggplot(melted_median_abv_ibu, aes(x=variable, y=value, fill=factor(Brewery_State))) +
geom_bar(stat="identity", position="dodge") +
xlab("State") + ylab("Median ABV/IBU")
ggplot(melted_median_abv_ibu, aes(x=variable, y=value, fill=factor(Brewery_State))) +
geom_bar(stat="identity", position="dodge")
# plot
ggplot(melted_median_abv_ibu, aes(x=variable, y=value, fill=factor(Brewery_State))) +
geom_bar(stat="identity", position="dodge") +
xlab("") + ylab("")
# find state with max ABV beer
beer_brew_df[which.max(beer_brew_df$ABV),c(2,4:10)]
beer_brew_df[which.max(beer_brew_df$ABV),c(2,4:10)]
# plot
ggplot(melted_median_abv_ibu, aes(x=variable, y=value, fill=factor(Brewery_State))) +
geom_bar(stat="identity", position="dodge") +
xlab("") + ylab("")
# find state with max ABV beer
beer_brew_df[which.max(beer_brew_df$ABV)]
beer_brew_df$ABV
print(beer_brew_df[which.max(beer_brew_df$IBU)])
print(beer_brew_df[which.max(beer_brew_df$IBU)])
# plot
ggplot(melted_median_abv_ibu, aes(x=variable, y=value, fill=factor(Brewery_State))) +
geom_bar(stat="identity", position="dodge") +
xlab("") + ylab("") +
scale_y_continuous(sec.axis = sec_axis(~./10, name="Median ABV%"))
beer_brew_df
melted_median_abv_ibu
median_abv
median_abv <- aggregate(ABV ~ Brewery_State, data = beer_brew_df, FUN=list(median))
(IBU)
median_abv <- aggregate(ABV ~ Brewery_State, data = beer_brew_df, median)
# display summary of ABV
summary(beer_brew_df$ABV)
library(dplyr)
library(knitr)
library(data.table)
library(doBy)
library(ggplot2)
library(reshape2)
# set working directory
data_dir = "C:\\Users\\vazqu\\Documents\\SMU\\data_science\\case_study_repo\\DATA_SCIENCE_CS01\\data"
working_dir = "C:\\Users\\vazqu\\Documents\\SMU\\data_science\\case_study_repo\\DATA_SCIENCE_CS01"
# strip whitespaces and set directory
data_dir <- trimws(data_dir)
working_dir <- trimws(working_dir)
setwd(working_dir)
###################
# Data Imputation
###################
# import Beers.csv data and append column names
beer_file <- paste(data_dir,"\\Beers.csv", sep = "")
beer_df <- read.csv(beer_file, sep=",", header = FALSE, na.strings = c("","NA"))
names(beer_df) <- c("Beer_Name", "Beer_ID", "ABV", "IBU", "Brewery_ID","Style", "Ounces")
# import Brewery.csv and get number of breweries in each state
brew_file <- paste(data_dir, "\\Breweries.csv", sep = "")
brew_df <- read.csv(brew_file, sep=",", header = FALSE, na.string = c("","NA"))
names(brew_df) <- c("Brewery_ID", "Brewery_Name", "Brewery_City","Brewery_State")
brew_state_count <- data.table(table(brew_df$Brewery_State))
brewery_state_count <- brewery_state_count[1:51]
# merge datasets and print first and last 6 observations
beer_brew_df <- merge(x = beer_df, y = brew_df, by = "variable",all = FALSE)
median_abv <- aggregate(ABV ~ Brewery_State, data = beer_brew_df, median)
median_abv
beer_brew_df$ABV
head(beer_brew_df)
# get median alcohol content (ABV) and international bitterness units (IBU)
median_abv <- aggregate(as.numeric(ABV) ~ Brewery_State, data = beer_brew_df, median)
median_abv
median_abv <- summaryBy(ABV ~ Brewery_State, data = beer_brew_df, FUN=list(median))
median_abv
# get median alcohol content (ABV) and international bitterness units (IBU)
median_abv <- summaryBy(Brewery_State ~ ABV, data = beer_brew_df, FUN=list(median))
median)abv
median_abv
saplly(beer_brew_df, median)
sapply(beer_brew_df, median)
sapply(as.numeric(beer_brew_df), median)
sapply(as.numeric(beer_brew_df$ABV), median)
as.numeric(beer_brew_df$ABV)
as.numeric(beer_brew_df$ABV*1000)
beer_brew_df$ABV*1000
typeof(beer_brew_df$ABV)
typeof(as.double(beer_brew_df$ABV))
median_abv <- summaryBy(Brewery_State ~ as.double(ABV), data = beer_brew_df, FUN=list(median))
median_abv
median_abv <- summaryBy(as.double(ABV) ~ Brewery_State, data = beer_brew_df, FUN=list(median))
median_abv <- aggregate(as.double(ABV) ~ Brewery_State, data = beer_brew_df, median)
median_abv
as.double(beer_brew_df$ABV)
beer_brew_df
beer_brew_df$ABV
median_abv <- aggregate(as.vector(ABV) ~ Brewery_State, data = beer_brew_df, median)
median_abv
# get median alcohol content (ABV) and international bitterness units (IBU)
median_abv <- summarise(Median = median(beer_brew_df$ABV))
median_abv <- aggregate(as.double(ABV) ~ Brewery_State, data = beer_brew_df, median, na.rm = TRUE)
median_abv
median_abv <- aggregate(as.vector(ABV) ~ Brewery_State, data = beer_brew_df, median)
median_abv
median_abv <- aggregate(as.vector(ABV) ~ Brewery_State, data = beer_brew_df, median, na.rm = TRUE)
median_abv
beer_brew_df <- beer_brew_df[complete.cases(beer_brew_df),]
na_count <- colSums(is.na(beer_brew_df))
print("NA count after incomplete row removal: ")
print(na_count)
# get median alcohol content (ABV) and international bitterness units (IBU)
median_abv <- summarise(Median = median(beer_brew_df$ABV))
library(dplyr)
library(knitr)
library(data.table)
library(doBy)
library(ggplot2)
library(reshape2)
# set working directory
data_dir = "C:\\Users\\vazqu\\Documents\\SMU\\data_science\\case_study_repo\\DATA_SCIENCE_CS01\\data"
working_dir = "C:\\Users\\vazqu\\Documents\\SMU\\data_science\\case_study_repo\\DATA_SCIENCE_CS01"
# strip whitespaces and set directory
data_dir <- trimws(data_dir)
working_dir <- trimws(working_dir)
setwd(working_dir)
###################
# Data Imputation
###################
# import Beers.csv data and append column names
beer_file <- paste(data_dir,"\\Beers.csv", sep = "")
beer_df <- read.csv(beer_file, sep=",", header = FALSE, na.strings = c("","NA"))
names(beer_df) <- c("Beer_Name", "Beer_ID", "ABV", "IBU", "Brewery_ID","Style", "Ounces")
# import Brewery.csv and get number of breweries in each state
brew_file <- paste(data_dir, "\\Breweries.csv", sep = "")
brew_df <- read.csv(brew_file, sep=",", header = FALSE, na.string = c("","NA"))
names(brew_df) <- c("Brewery_ID", "Brewery_Name", "Brewery_City","Brewery_State")
brew_state_count <- data.table(table(brew_df$Brewery_State))
brewery_state_count <- brewery_state_count[1:51]
# merge datasets and print first and last 6 observations
beer_brew_df <- merge(x = beer_df, y = brew_df, by = "variable",all = FALSE)
beer_brew_df <- data.table(beer_brew_df)
head(beer_brew_df, 6)
tail(beer_brew_df,6)
# report the number of NA's in each column
na_count <- colSums(is.na(beer_brew_df))
print("Initial NA count per data column is: ")
print(na_count)
# get and show only complete rows
beer_brew_df <- beer_brew_df[complete.cases(beer_brew_df),]
na_count <- colSums(is.na(beer_brew_df))
print("NA count after incomplete row removal: ")
print(na_count)
# get median alcohol content (ABV) and international bitterness units (IBU)
median_abv <- aggregate(as.vector(ABV) ~ Brewery_State, data = beer_brew_df)
# get median alcohol content (ABV) and international bitterness units (IBU)
median_abv <- aggregate(as.vector(ABV) ~ Brewery_State, data = beer_brew_df, FUN=list(median))
# get median alcohol content (ABV) and international bitterness units (IBU)beer_brew_df <- final
median_abv <- aggregate(as.vector(ABV) ~ Brewery_State, data = beer_brew_df)
# get median alcohol content (ABV) and international bitterness units (IBU)beer_brew_df <- final
median_abv <- aggregate(as.vector(ABV) ~ Brewery_State, data = beer_brew_df, FUN = median)
median_anv
median_abv
# get median alcohol content (ABV) and international bitterness units (IBU)beer_brew_df <- final
median_abv <- aggregate(as.vector(ABV) ~ Brewery_State, data = beer_brew_df, FUN = median, na.omit())
# get median alcohol content (ABV) and international bitterness units (IBU)beer_brew_df <- final
median_abv <- aggregate(as.vector(ABV) ~ Brewery_State, data = beer_brew_df, FUN = median, na.omit("NA"))
# get median alcohol content (ABV) and international bitterness units (IBU)beer_brew_df <- final
median_abv <- aggregate(as.vector(ABV) ~ Brewery_State, data = beer_brew_df, FUN = median, na.rm = TRUE)
median_abv <- aggregate(as.vector(ABV) ~ Brewery_State, data = beer_brew_df, FUN = median, na.rm = TRUE)
median_abv
beer_brew_df <- beer_brew_df[complete.cases(beer_brew_df),]
na_count <- colSums(is.na(beer_brew_df))
print("NA count after incomplete row removal: ")
print(na_count)
a.rm = TRUE
# get median alcohol content (ABV) and international bitterness units (IBU)beer_brew_df <- final
median_abv <- aggregate(as.vector(ABV) ~ Brewery_State, data = beer_brew_df, FUN = median, na.rm = TRUE)
median_abv
na_count <- colSums(is.na(beer_brew_df))
na_count
median_abv <- median(as.vector(beer_bref_df))
median_abv <- median(as.vector(beer_brew_df))
median_abv <- median(as.vector(beer_brew_df$ABV))
median_abv
median_abv <- median(as.vector(ABV) ~ Brewery_State, data=beer_brew_df$ABV)
median_abv
median_abv <- median(as.vector(ABV) ~ Brewery_State, data=beer_brew_df$ABV, na.rm = TRUE)
median_abv
median_abv <- median(ABV ~ Brewery_State, data=beer_brew_df$ABV, na.rm = TRUE)
median_abv
median_abv <- median(Brewery_State ~ ABV, data=beer_brew_df$ABV, na.rm = TRUE)
median_abv
library(dplyr)
library(knitr)
library(data.table)
library(doBy)
library(ggplot2)
library(reshape2)
# set working directory
data_dir = "C:\\Users\\vazqu\\Documents\\SMU\\data_science\\case_study_repo\\DATA_SCIENCE_CS01\\data"
working_dir = "C:\\Users\\vazqu\\Documents\\SMU\\data_science\\case_study_repo\\DATA_SCIENCE_CS01"
# strip whitespaces and set directory
data_dir <- trimws(data_dir)
working_dir <- trimws(working_dir)
setwd(working_dir)
###################
# Data Imputation
###################
# import Beers.csv data and append column names
beer_file <- paste(data_dir,"\\Beers.csv", sep = "")
#beer_df <- read.csv(beer_file, sep=",", header = FALSE, na.strings = c("","NA"))
beer_df <- read.csv(beer_file, sep=",", header = FALSE)
names(beer_df) <- c("Beer_Name", "Beer_ID", "ABV", "IBU", "Brewery_ID","Style", "Ounces")
# import Brewery.csv and get number of breweries in each state
brew_file <- paste(data_dir, "\\Breweries.csv", sep = "")
brew_df <- read.csv(brew_file, sep=",", header = FALSE)
names(brew_df) <- c("Brewery_ID", "Brewery_Name", "Brewery_City","Brewery_State")
brew_state_count <- data.table(table(brew_df$Brewery_State))
brewery_state_count <- brewery_state_count[1:51]
# merge datasets and print first and last 6 observations
beer_brew_df <- merge(x = beer_df, y = brew_df, by = "variable",all = FALSE)
beer_brew_df <- data.table(beer_brew_df)
head(beer_brew_df, 6)
tail(beer_brew_df,6)
# report the number of NA's in each column
na_count <- colSums(is.na(beer_brew_df))
print("Initial NA count per data column is: ")
print(na_count)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, fig.width = 11, fig.height = 7, fig.align = "center")
beers <- read.csv("data/Beers.csv")
breweries <- read.csv("data/Breweries.csv")
table(breweries$State)
beersAndBreweries <- merge(beers, breweries, by.x = 'Brewery_id', by.y = 'Brew_ID')
#"Names" will be present in both, here is how I fixed that.
dfNames <- names(beersAndBreweries)
#Looking at the original data, col 2 was names for beers, and col 2 was names in breweries. 2+6 (-1 for brew_ID, which disappeared in the merge) = 8
dfNames[2] <- "Beer_Names"
dfNames[8] <- "Brewery_Names"
names(beersAndBreweries) <- dfNames
head(beersAndBreweries, 6)
tail(beersAndBreweries, 6)
colSums(is.na(beersAndBreweries))
#Group it all!
library(dplyr)
groupedbnb <- group_by(beersAndBreweries, State)
#get statistics by state
medAbv <- summarize(groupedbnb, medABV = median(ABV, na.rm = TRUE))
medIBU <- summarize(groupedbnb, medIBU = median(IBU, na.rm = TRUE))
#plot it
library(ggplot2)
ggplot(medAbv, aes(x = State, y = medABV)) +
geom_bar(stat = "identity", fill = "#5EA9BE") +
theme(panel.background = element_rect(fill = "#FDF8E2"),
axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = 0.5)) +
labs(title = "Median ABV By State", y = "Median ABV")
ggplot(medIBU, aes(x = State, y = medIBU)) +
geom_bar(stat = "identity", fill = "#F3BFB3") +
theme(panel.background = element_rect(fill = "#FDF8E2"),
axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = 0.5)) +
labs(title = "Median IBU By State", y = "Median IBU")
#The highest ABV is:
highestABV <- max(beersAndBreweries$ABV, na.rm = TRUE)
highestABV
#The state with the highest ABV beer is:
as.character(beersAndBreweries$State[which(beersAndBreweries$ABV == highestABV)])
#The highest ABV is:
highestIBU <- max(beersAndBreweries$IBU, na.rm = TRUE)
highestIBU
#The state with the highest ABV beer is:
as.character(beersAndBreweries$State[which(beersAndBreweries$IBU == highestIBU)])
summary(beersAndBreweries$ABV)
#This is easier to see in a boxplot:
ggplot(beersAndBreweries, aes(y = ABV)) +
geom_boxplot(fill = "#5EA9BE") +
theme(panel.background = element_rect(fill = "#FDF8E2"))
ggplot(beersAndBreweries, aes(x = ABV, y = IBU)) +
geom_point(color = "blue3") +
geom_smooth(method = "lm")  +
theme(panel.background = element_rect(fill = "#FDF8E2"),
plot.title = element_text(hjust = 0.5)) +
labs(title = "IBU vs ABU")
cor(beersAndBreweries$ABV, beersAndBreweries$IBU, use = "complete.obs")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, fig.width = 11, fig.height = 7, fig.align = "center")
beers <- read.csv("data/Beers.csv")
breweries <- read.csv("data/Breweries.csv")
table(breweries$State)
beersAndBreweries <- merge(beers, breweries, by.x = 'Brewery_id', by.y = 'Brew_ID')
#"Names" will be present in both, here is how I fixed that.
dfNames <- names(beersAndBreweries)
#Looking at the original data, col 2 was names for beers, and col 2 was names in breweries. 2+6 (-1 for brew_ID, which disappeared in the merge) = 8
dfNames[2] <- "Beer_Names"
dfNames[8] <- "Brewery_Names"
names(beersAndBreweries) <- dfNames
head(beersAndBreweries, 6)
tail(beersAndBreweries, 6)
colSums(is.na(beersAndBreweries))
#Group it all!
library(dplyr)
groupedbnb <- group_by(beersAndBreweries, State)
#get statistics by state
medAbv <- summarize(groupedbnb, medABV = median(ABV, na.rm = TRUE))
medIBU <- summarize(groupedbnb, medIBU = median(IBU, na.rm = TRUE))
#plot it
library(ggplot2)
ggplot(medAbv, aes(x = State, y = medABV)) +
geom_bar(stat = "identity", fill = "#5EA9BE") +
theme(panel.background = element_rect(fill = "#FDF8E2"),
axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = 0.5)) +
labs(title = "Median ABV By State", y = "Median ABV")
ggplot(medIBU, aes(x = State, y = medIBU)) +
geom_bar(stat = "identity", fill = "#F3BFB3") +
theme(panel.background = element_rect(fill = "#FDF8E2"),
axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = 0.5)) +
labs(title = "Median IBU By State", y = "Median IBU")
#The highest ABV is:
highestABV <- max(beersAndBreweries$ABV, na.rm = TRUE)
highestABV
#The state with the highest ABV beer is:
as.character(beersAndBreweries$State[which(beersAndBreweries$ABV == highestABV)])
#The highest ABV is:
highestIBU <- max(beersAndBreweries$IBU, na.rm = TRUE)
highestIBU
#The state with the highest ABV beer is:
as.character(beersAndBreweries$State[which(beersAndBreweries$IBU == highestIBU)])
summary(beersAndBreweries$ABV)
#This is easier to see in a boxplot:
ggplot(beersAndBreweries, aes(x = ABV)) +
geom_histogram(fill = "#5EA9BE") +
theme(panel.background = element_rect(fill = "#FDF8E2"))
ggplot(beersAndBreweries, aes(x = ABV, y = IBU)) +
geom_point(color = "blue3") +
geom_smooth(method = "lm")  +
theme(panel.background = element_rect(fill = "#FDF8E2"),
plot.title = element_text(hjust = 0.5)) +
labs(title = "IBU vs ABU")
cor(beersAndBreweries$ABV, beersAndBreweries$IBU, use = "complete.obs")
head(groupedbnb)
class(beersAndBreweries$Brewery_Names)
class(beersAndBreweries$Brewery_Names) <- "character"
head(beersAndBreweries)
install.packages("dataMaid")
library(dataMaid)
?makeCodebook
